#! /usr/bin/env python

# Copyright (c) 2011 SEOmoz
# 
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
# 
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

import awssh
import argparse
from boto import ec2

# Read in some of our arguments
parser = argparse.ArgumentParser(description='Store AWS instances in your ssh-config')

parser.add_argument('--access-id', dest='accessID', default=None,
	help='The Access ID associated with your account')
parser.add_argument('--secret-key', dest='secretKey', default=None,
	help='The secret key associated with your account')
parser.add_argument('--profile', dest='profileName', default=None,
	help='The profile of which AWS credentials to use, from your local AWS config files')
parser.add_argument('--ssh-user-name', dest='sshUserName', default=None,
	help='The User name to set for all records in your ssh config')


args = parser.parse_args()

awssh.process(
	ec2.EC2Connection(
		aws_access_key_id=args.accessID,
		aws_secret_access_key=args.secretKey,
		profile_name=args.profileName),
	args.sshUserName,
)
